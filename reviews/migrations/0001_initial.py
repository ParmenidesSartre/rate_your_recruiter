# Generated by Django 5.0.4 on 2024-05-07 14:58

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255, unique=True)),
                (
                    "industry",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Tech", "Technology"),
                            ("Finance", "Finance"),
                            ("Healthcare", "Healthcare"),
                            ("Consulting", "Consulting"),
                            ("Education", "Education"),
                            ("Government", "Government"),
                            ("Retail", "Retail"),
                            ("Manufacturing", "Manufacturing"),
                            ("Other", "Other"),
                        ],
                        default="Other",
                        max_length=255,
                    ),
                ),
                ("consultancy", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
            },
        ),
        migrations.CreateModel(
            name="HistoricalRecruiter",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(db_index=True, max_length=254)),
                ("claimed", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "claimed_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="reviews.company",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical recruiter",
                "verbose_name_plural": "historical recruiters",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Recruiter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("claimed", models.BooleanField(default=False)),
                (
                    "claimed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recruiters",
                        to="reviews.company",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecruiterClaim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proof", models.FileField(upload_to="claim_proofs/")),
                ("approved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "claimant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recruiter",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.recruiter",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="claims_reviewed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecruiterReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points_awarded_for_update", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Applied", "Applied"),
                            ("Interviewed", "Interviewed"),
                            ("Rejected", "Rejected"),
                            ("Offered", "Offered"),
                            ("Accepted", "Accepted"),
                            ("Declined", "Declined"),
                            ("Withdrawn", "Withdrawn"),
                            ("Ghosted", "Ghosted"),
                            ("Other", "Other"),
                        ],
                        default="Applied",
                        help_text="Current status of the recruitment process.",
                        max_length=20,
                    ),
                ),
                ("contact_date", models.DateField()),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("Email", "Email"),
                            ("Phone", "Phone Call"),
                            ("WhatsApp", "WhatsApp"),
                            ("InPerson", "In-Person Meeting"),
                        ],
                        default="Email",
                        help_text="Method of interaction with the recruiter.",
                        max_length=20,
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        help_text="General rating should be between 1 and 5.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "responsiveness_rating",
                    models.IntegerField(
                        help_text="Rating of recruiter's responsiveness, from 1 (poor) to 5 (excellent).",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "professionalism_rating",
                    models.IntegerField(
                        help_text="Rating of recruiter's professionalism, from 1 (poor) to 5 (excellent).",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "transparency_rating",
                    models.IntegerField(
                        help_text="Rating of recruiter's transparency in the recruitment process, from 1 (poor) to 5 (excellent).",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_text", models.TextField()),
                ("proof", models.FileField(blank=True, null=True, upload_to="proofs/")),
                ("proof_link", models.URLField(blank=True, null=True)),
                ("anonymous", models.BooleanField(default=False)),
                ("flagged", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.company",
                    ),
                ),
                (
                    "recruiter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.recruiter",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Recruiter Review",
                "verbose_name_plural": "Recruiter Reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RecruiterResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("response_text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recruiter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.recruiter",
                    ),
                ),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.recruiterreview",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recruiter Response",
                "verbose_name_plural": "Recruiter Responses",
            },
        ),
        migrations.CreateModel(
            name="ReviewFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback", models.TextField()),
                ("resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reviews.recruiterreview",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Review Feedback",
                "verbose_name_plural": "Review Feedbacks",
            },
        ),
    ]
